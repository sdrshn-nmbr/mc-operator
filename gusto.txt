// Define the base userPrompt 
const defaultUserPrompt = `I need to log into Gusto at https://app.gusto.com and download all 941 forms and also download employee summary report from reports tab.

# Gusto Login and Navigation Instructions

Please help me log in to Gusto, download a 941 tax form, and an employee summary report. Follow these instructions carefully:

1. **Navigate to Login Page**
   - Go to https://app.gusto.com/login

2. **Login with Credentials**
   - Fill in the email field (input[name="email"]) with: daniel@elemetric.io
   - Fill in the password field (input[name="password"]) with: midas!1234
   - Click the submit button (button[type="submit"])

3. **Handle Two-Factor Authentication**
   - When the 2FA screen appears, look for input[name="code"]
   - Ask me for the verification code
   - Enter the code I provide
   - Click the submit button with id="submit-2fa-code" or button[type="submit"]

4. **Skip Device Remembering**
   - After 2FA verification, look for a button containing "Skip for now" text
   - Use this script to find and ID it:
     buttons = Array.from(document.querySelectorAll('button'));
     skipButton = buttons.find(btn => btn.textContent.includes('Skip for now'));
     if (skipButton) skipButton.id = 'skip-for-now-btn';
   - Click it using the assigned ID: #skip-for-now-btn

5. **Switch to Elemetric Inc Company Account**
   - Wait for button[aria-label="Account menu"] to appear and click it
   - In the dropdown, find and add ID to the "Switch company" option:
     switchOption = Array.from(document.querySelectorAll('a, button')).find(el => el.textContent.includes('Switch company'));
     if (switchOption) switchOption.id = 'switch-company-option';
   - Click #switch-company-option
   - Find the Elemetric Inc link:
     elemetricLink = Array.from(document.querySelectorAll('a')).find(link => link.href && link.href.includes('elemetric-inc/payroll_admin'));
     if (elemetricLink) elemetricLink.id = 'elemetric-link';
   - Click #elemetric-link

6. **Navigate to Tax Documents and Download 941 Form**
   - Navigate directly to: https://app.gusto.com/elemetric-inc/payroll_admin/taxes-and-compliance/tax-documents
   - Find the first 941 tax form view link:
     rows = Array.from(document.querySelectorAll('tr')).filter(row => row.textContent.startsWith('941') && !row.textContent.includes('Illinois'));
     if (rows.length > 0) {
       viewLink = rows[0].querySelector('a[href*="/forms/"]');
       if (viewLink) viewLink.id = 'view-941-link-0';
     }
   - Get the href from the link rather than clicking it:
     formUrl = document.querySelector('#view-941-link-0').getAttribute('href');
     formUrl;
   - Navigate directly to the form URL (to avoid opening a new tab):
     https://app.gusto.com + formUrl
   - Use puppeteer_check_tabs_for_s3 tool with:
     {
       timeout: 5000,
       autoDownload: true,
       filename: "941-form.pdf"
     }

7. **Navigate to Employee Summary Report**
   - Navigate back to Elemetric Inc dashboard: https://app.gusto.com/elemetric-inc/payroll_admin
   - Find and click on the Reports link in the sidebar:
     reportLink = Array.from(document.querySelectorAll('a')).find(el => el.textContent.includes('Reports'));
     if (reportLink) reportLink.id = 'reports-sidebar-link';
   - Click #reports-sidebar-link
   - Find and click on the Employee Summary report:
     employeeSummaryLink = Array.from(document.querySelectorAll('a')).find(el => el.textContent.includes('Employee summary'));
     if (employeeSummaryLink) employeeSummaryLink.id = 'employee-summary-link';
   - Click #employee-summary-link

8. **Generate and Download Employee Summary Report**
   - Find the Generate Report button:
     generateButton = Array.from(document.querySelectorAll('button')).find(btn => btn.textContent.includes('Generate report'));
     if (generateButton) {
       generateButton.id = 'generate-report-button';
       // Store the URL that the button would navigate to
       if (generateButton.getAttribute('data-url')) {
         // This is for buttons with data-url attributes
         generateButton.setAttribute('data-target-url', generateButton.getAttribute('data-url'));
       } else if (generateButton.onclick) {
         // Try to extract URL from onclick handler if possible
         const onclickString = generateButton.onclick.toString();
         const urlMatch = onclickString.match(/window\\.location\\.href\\s*=\\s*['"]([^'"]+)['"]/);
         if (urlMatch && urlMatch[1]) {
           generateButton.setAttribute('data-target-url', urlMatch[1]);
         }
       }
     }
   
   - IMPORTANT: Use the special click tool that prevents new tabs:
     Use puppeteer_click_without_target with selector #generate-report-button and waitForNavigation: true
   
   - After the report page loads, wait a moment for the Download CSV button to appear
   
   - First, look for any download buttons:
     const downloadElements = Array.from(document.querySelectorAll('button, a')).filter(el => 
       el.textContent.includes('Download') || 
       (el.querySelector('span') && el.querySelector('span').textContent.includes('Download')));
     
     if (downloadElements.length > 0) {
       downloadElements.forEach((el, i) => { 
         el.id = 'download-element-' + i; 
         console.log('Found download element:', el.textContent);
       });
     }
   
   - Check again after a delay to give buttons time to appear:
     setTimeout(() => {
       const downloadButtons = Array.from(document.querySelectorAll('button')).filter(btn => 
         btn.textContent.includes('Download CSV') || 
         (btn.querySelector('span') && btn.querySelector('span').textContent.includes('Download CSV')));
       
       if (downloadButtons.length > 0) {
         downloadButtons.forEach((btn, i) => { btn.id = 'download-csv-' + i; });
         console.log('Found CSV buttons:', downloadButtons.length);
       }
     }, 2000);
   
   - Use puppeteer_waitForSelector_with_polling to wait for any download button to appear:
     selector: '[id^="download-csv-"]', pollingInterval: 500, maxAttempts: 30
   
   - Click the download button when it appears:
     Use puppeteer_click_without_target with selector: '[id^="download-csv-"]'
   
   - Use puppeteer_check_tabs_for_s3 to find and download the CSV:
     {
       timeout: 5000,
       autoDownload: true,
       filename: "employee-summary.csv"
     }

### Important Notes
- For the 941 form, we navigate directly to the form URL instead of clicking to avoid opening a new tab
- For the employee summary, we use puppeteer_click_without_target to prevent new tab opening
- The puppeteer_check_tabs_for_s3 tool handles downloading files automatically
- S3 URLs expire quickly (around 30 seconds), so always get fresh URLs before downloading
- If a download fails with 403 Forbidden, it usually means the URL has expired - repeat the navigation step
`;
